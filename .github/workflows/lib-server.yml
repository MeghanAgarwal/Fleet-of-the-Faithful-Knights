name: lib-server

on:
  workflow_dispatch:
  pull_request:
    paths:
      - package.json
      - libs/server/**
    branches:
      - main

jobs:
  test-lib-server:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: npm auth
        run: |
          npm config set @kashw2:registry https://npm.pkg.github.com/
          npm config set //npm.pkg.github.com/:_authToken=${{ secrets.NPM_PACKAGE_TOKEN }}
          npm config set registry https://registry.npmjs.org/

      - name: install globals
        run: npm install -g lerna

      - name: npm install
        run: |
          npm install
          lerna exec npm install --scope=@kashw2/lib-server

      - name: test server
        run: lerna run test --scope=@kashw2/lib-server

      - name: generate coverage
        run: |
          lerna run cov:ci --scope=@kashw2/lib-server

      - name: setup codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: libs/server
  build-lib-server:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: npm auth
        run: |
          npm config set @kashw2:registry https://npm.pkg.github.com/
          npm config set //npm.pkg.github.com/:_authToken=${{ secrets.NPM_PACKAGE_TOKEN }}
          npm config set registry https://registry.npmjs.org/

      - name: install globals
        run:  npm install -g lerna

      - name: npm install
        run: |
          npm install
          lerna exec npm install --scope=@kashw2/lib-server

      - name: build
        run: lerna run build:dev --scope=@kashw2/lib-server
